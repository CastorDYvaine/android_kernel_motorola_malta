/*
 * Copyright (C) 2019 MediaTek Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See http://www.gnu.org/licenses/gpl-2.0.html for more details.
 */

#include <dt-bindings/interrupt-controller/arm-gic.h>
#include <dt-bindings/interrupt-controller/irq.h>
#include <dt-bindings/pinctrl/mt6765-pinfunc.h>
#include <dt-bindings/clock/mt6765-clk.h>

/dts-v1/;
/plugin/;

/* chosen */
&chosen {

	/* fpga may has no lk, we need to specify display info here */
	/* fb buffer is reserved using this dts by memory node above */
	atag,videolfb-fb_base_h = <0x0>;
	atag,videolfb-fb_base_l = <0x5e605000>;
	atag,videolfb-islcmfound = <1>;
	/* because no lk, so lcm is not inited */
	atag,videolfb-islcm_inited = <0>;
	atag,videolfb-fps= <6000>;
	atag,videolfb-vramSize= <0x017bb000>;
	atag,videolfb-lcmname= "nt35695B_fhd_dsi_cmd_auo_rt5081_drv";
};

&odm {
	led0:led@0 {
		compatible = "mediatek,red";
		led_mode = <3>;
		data = <1>;
		pwm_config = <0 0 0 0 0>;
	};
	led1:led@1 {
		compatible = "mediatek,green";
		led_mode = <3>;
		data = <2>;
		pwm_config = <0 0 0 0 0>;
	};
	led2:led@2 {
		compatible = "mediatek,blue";
		led_mode = <0>;
		data = <1>;
		pwm_config = <0 0 0 0 0>;
	};
	led3:led@3 {
		compatible = "mediatek,jogball-backlight";
		led_mode = <0>;
		data = <1>;
		pwm_config = <0 0 0 0 0>;
	};
	led4:led@4 {
		compatible = "mediatek,keyboard-backlight";
		led_mode = <0>;
		data = <1>;
		pwm_config = <0 0 0 0 0>;
	};
	led5:led@5 {
		compatible = "mediatek,button-backlight";
		led_mode = <0>;
		data = <1>;
		pwm_config = <0 0 0 0 0>;
	};
	led6:led@6 {
		compatible = "mediatek,lcd-backlight";
		led_mode = <4>;
		data = <1>;
		pwm_config = <0 2 0 0 0>;
	};
	vibrator0:vibrator@0 {
		compatible = "mediatek,vibrator";
		vib_timer = <25>;
		vib_limit = <9>;
		vib_vol= <0x0b>;
	};
};

&i2c3 {
	ext_buck_lp4@57 {
		regulator-name ="ext_buck_vdd2";
		regulator-min-microvolt = <300000>;
		regulator-max-microvolt = <1300000>;
		vsel_pin = <0>;
	};

	ext_buck_lp4x@50 {
		regulator-name ="ext_buck_vddq";
		regulator-min-microvolt = <300000>;
		regulator-max-microvolt = <1300000>;
		vsel_pin = <1>;
	};
};

&i2c6 {
	ext_buck_vgpu@55 {
		regulator-name ="ext_buck_vgpu";
		regulator-min-microvolt = <300000>;
		regulator-max-microvolt = <1300000>;
		vsel_pin = <2>;
	};
};
/* TOUCH start */
&i2c0 {
        #address-cells = <1>;
        #size-cells = <0>;
        clock-frequency = <400000>;
        mediatek,use-open-drain;
        focaltech_touch_mtk:focaltech_touch@38 {
                compatible = "mediatek,focaltech_touch";
                reg = <0x38>;
                status = "okay";
        };
        ilitek_touch_mtk:ilitek_touch@41 {
                compatible = "mediatek,ilitek_touch";
                reg = <0x41>;
                status = "okay";
        };
        ili9881x_touch:ili9881x_touch@42 {
                compatible = "mediatek,ili9881x_touch";
                reg = <0x42>;
                status = "okay";
        };
        chipone_tddi_mtk:chipone_touch@48 {
                compatible = "mediatek,chipone_tddi";
                reg = <0x48>;
                status = "okay";
        };

};

&touch {
	tpd-resolution = <720 1560>;
	use-tpd-button = <0>;
	tpd-key-num = <3>;
	tpd-key-local= <139 172 158 0>;
	tpd-key-dim-local = <90 883 100 40 230
				 883 100 40 370 883 100 40 0 0 0 0>;
	tpd-max-touch-num = <10>;
	tpd-filter-enable = <1>;
	tpd-filter-pixel-density = <106>;
	tpd-filter-custom-prameters = <0 0 0 0 0 0 0 0 0 0 0 0>;
	tpd-filter-custom-speed = <0 0 0>;
	pinctrl-names = "default", "state_eint_as_int", "state_eint_output0",
		"state_eint_output1", "state_rst_output0", "state_rst_output1";
	pinctrl-0 = <&ctp_pins_default>;
	pinctrl-1 = <&ctp_pins_eint_as_int>;
	pinctrl-2 = <&ctp_pins_eint_output0>;
	pinctrl-3 = <&ctp_pins_eint_output1>;
	pinctrl-4 = <&ctp_pins_rst_output0>;
	pinctrl-5 = <&ctp_pins_rst_output1>;
	status = "okay";
};
&pio {
	ctp_pins_default: eint0default {
	};
	ctp_pins_eint_as_int: eint@0 {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO0__FUNC_GPIO0>;
			slew-rate = <0>;
			bias-disable;
		};
	};
	ctp_pins_eint_output0: eintoutput0 {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO0__FUNC_GPIO0>;
			slew-rate = <1>;
			output-low;
		};
	};
	ctp_pins_eint_output1: eintoutput1 {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO0__FUNC_GPIO0>;
			slew-rate = <1>;
			output-high;
		};
	};
	ctp_pins_rst_output0: rstoutput0 {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO174__FUNC_GPIO174>;
			slew-rate = <1>;
			output-low;
		};
	};
	ctp_pins_rst_output1: rstoutput1 {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO174__FUNC_GPIO174>;
			slew-rate = <1>;
			output-high;
		};
	};
};
/* TOUCH end */

&i2c6 {
	#address-cells = <1>;
	#size-cells = <0>;
	clock-frequency = <400000>;

	lcd_i2c_bias_enn_enp@3e{
		compatible = "mediatek,I2C_LCD_BIAS";
		reg = <0x3e>;
		status = "okay";
	};
};

/* DISPSYS GPIO standardization */
&pio {
	mtkfb_pins_mode_te_gpio: mode_te_gpio {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO44__FUNC_DSI_TE>;
		};
	};

	mtkfb_pins_mode_te_te: mode_te_te {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO44__FUNC_DSI_TE>;
		};
	};

	mtkfb_pins_lcm_reset0: lcm_rst_out0_gpio {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO45__FUNC_GPIO45>;
			slew-rate = <1>;
			output-low;
		};
	};

	mtkfb_pins_lcm_reset1: lcm_rst_out1_gpio {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO45__FUNC_GPIO45>;
			slew-rate = <1>;
			output-high;
		};
	};

	mtkfb_pins_lcd_bias_enp0: lcd_bias_enp0_gpio {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO172__FUNC_GPIO172>;
			slew-rate = <1>;
			output-low;
		};
	};
	mtkfb_pins_lcd_bias_enp1: lcd_bias_enp1_gpio {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO172__FUNC_GPIO172>;
			slew-rate = <1>;
			output-high;
		};
	};

	mtkfb_pins_lcd_bias_enn0: lcd_bias_enn0_gpio {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO173__FUNC_GPIO173>;
			slew-rate = <1>;
			output-low;
		};
	};
	mtkfb_pins_lcd_bias_enn1: lcd_bias_enn1_gpio {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO173__FUNC_GPIO173>;
			slew-rate = <1>;
			output-high;
		};
	};

};

&mtkfb {
	pinctrl-names = "mode_te_gpio", "mode_te_te", "lcm_rst_out0_gpio",
		"lcm_rst_out1_gpio","lcd_bias_enp0_gpio", "lcd_bias_enp1_gpio", "lcd_bias_enn0_gpio", "lcd_bias_enn1_gpio";
	pinctrl-0 = <&mtkfb_pins_mode_te_gpio>;
	pinctrl-1 = <&mtkfb_pins_mode_te_te>;
	pinctrl-2 = <&mtkfb_pins_lcm_reset0>;
	pinctrl-3 = <&mtkfb_pins_lcm_reset1>;
	pinctrl-4 = <&mtkfb_pins_lcd_bias_enp0>;
	pinctrl-5 = <&mtkfb_pins_lcd_bias_enp1>;
	pinctrl-6 = <&mtkfb_pins_lcd_bias_enn0>;
	pinctrl-7 = <&mtkfb_pins_lcd_bias_enn1>;
	status = "okay";
};
/* DISPSYS GPIO standardization end */
/* CONSYS GPIO standardization */
&pio {
	consys_pins_default: consys_default {
	};
	gpslna_pins_init: gpslna@0 {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO91__FUNC_GPIO91>;
			slew-rate = <0>;
			bias-disable;
			output-low;
		};
	};
	gpslna_pins_oh: gpslna@1 {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO91__FUNC_GPIO91>;
			slew-rate = <1>;
			output-high;
		};
	};
	gpslna_pins_ol: gpslna@2 {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO91__FUNC_GPIO91>;
			slew-rate = <1>;
			output-low;
		};
	};
};
&consys {
	pinctrl-names = "default", "gps_lna_state_init",
		"gps_lna_state_oh", "gps_lna_state_ol";
	pinctrl-0 = <&consys_pins_default>;
	pinctrl-1 = <&gpslna_pins_init>;
	pinctrl-2 = <&gpslna_pins_oh>;
	pinctrl-3 = <&gpslna_pins_ol>;
	status = "okay";
};
/* CONSYS end */

/* accdet start */
&accdet {
	accdet-mic-vol = <6>;
	headset-mode-setting = <0x500 0x500 1 0x1f0 0x800 0x800 0x20 0x44>;
	accdet-plugout-debounce = <1>;
	accdet-mic-mode = <1>;
	headset-eint-level-pol = <8>;
	headset-three-key-threshold = <0 80 175 400>;
	headset-three-key-threshold-CDD = <0 121 192 600>;
	headset-four-key-threshold = <0 58 121 192 400>;
	pinctrl-names = "default", "state_eint_as_int";
	pinctrl-0 = <&accdet_pins_default>;
	pinctrl-1 = <&accdet_pins_eint_as_int>;
	status = "okay";
};
&pio {
	accdet_pins_default: accdetdefault {
	};
	accdet_pins_eint_as_int: accdeteint@0 {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO9__FUNC_GPIO9>;
			slew-rate = <0>;
			bias-disable;
		};
	};
};
/* accdet end */

/*usb cable start*/
&usb_cable {
	usbcable-gpio = <&pio 19 0>;
	pinctrl-names = "default";
	pinctrl-0 = <&usbcable_pins_default>;
	status = "okay";
};
&pio {
	usbcable_pins_default:usbcableeint@0{
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO19__FUNC_GPIO19>;
			slew-rate = <0>;
			bias-disable;
		};
	};
};
/*usb cable end*/

&led_simple {
	pinctrl-names = "default", "red_led_output0", "red_led_output1";
	pinctrl-0 = <&red_led_default>;
	pinctrl-1 = <&red_led_pull_down>;
	pinctrl-2 = <&red_led_pull_up>;
	status = "okay";
};
&pio {
	red_led_default: led_default {
				 };
	red_led_pull_down: led_output0 {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO159__FUNC_GPIO159>;
			slew-rate = <1>;
			output-low;
		};
	};
	red_led_pull_up: led_output1 {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO159__FUNC_GPIO159>;
			slew-rate = <1>;
			output-high;
		};
	};
};

/* FINGERPRINT start */
&spi0 {
	#address-cells = <1>;
	#size-cells = <0>;
	fingerprint@0 {
		compatible = "goodix,goodix-fp";
		reg = <0>;
		spi-max-frequency = <8000000>;
		netlink-event = <30>;
		status = "okay";
	};
};

/* &goodix_fp {
	pinctrl-names = "default", "reset_high", "reset_low";
	pinctrl-0 = <&fingerprint_default>;
	pinctrl-1 = <&fingerprint_reset_high>;
	pinctrl-2 = <&fingerprint_reset_low>;
	status = "okay";
}; */

/* &pio {
	fingerprint_default: state_default {
	};
	fingerprint_reset_high: state_reset_high {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO172__FUNC_GPIO172>;
			slew-rate = <1>;
			output-high;
		};
	};
	fingerprint_reset_low: state_reset_low {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO172__FUNC_GPIO172>;
			slew-rate = <1>;
			output-low;
		};
	};
}; */

&pio{
     fpsensor_spi_default: fpsensor_spi_default {
     };
     fpsensor_spi_cs_en0: fpsensor_spi_cs_low {
         pins_cmd_dat {
             pinmux = <PINMUX_GPIO26__FUNC_SPI1_A_CSB>;
             slew-rate = <1>;
             output-low;
         };
     };
     fpsensor_spi_cs_en1: fpsensor_spi_cs_high {
         pins_cmd_dat {
             pinmux = <PINMUX_GPIO26__FUNC_SPI1_A_CSB>;
             slew-rate = <1>;
             output-high;
         };
     };
     fpsensor_spi_mi_mode_en0: fpsensor_spi_mi_low {
         pins_cmd_dat {
             pinmux = <PINMUX_GPIO25__FUNC_SPI1_A_MI>;
             slew-rate = <0>;
             bias-pull-up = <00>;
         };
     };
     fpsensor_spi_mi_mode_en1: fpsensor_spi_mi_high {
         pins_cmd_dat {
             pinmux = <PINMUX_GPIO25__FUNC_SPI1_A_MI>;
             bias-disable;
         };
     };
     fpsensor_spi_mo_mode_en0: fpsensor_spi_mo_low {
         pins_cmd_dat {
             pinmux = <PINMUX_GPIO27__FUNC_SPI1_A_MO>;
             slew-rate = <1>;
             output-low;
         };
     };
     fpsensor_spi_mo_mode_en1: fpsensor_spi_mo_high {
         pins_cmd_dat {
             pinmux = <PINMUX_GPIO27__FUNC_SPI1_A_MO>;
             slew-rate = <1>;
             output-high;
         };
     };
     fpsensor_spi_mclk_mode_en0: fpsensor_spi_mclk_low {
         pins_cmd_dat {
             pinmux = <PINMUX_GPIO28__FUNC_SPI1_A_CLK>;
             slew-rate = <1>;
             output-low;
         };
     };
     fpsensor_spi_mclk_mode_en1: fpsensor_spi_mclk_high {
         pins_cmd_dat {
             pinmux = <PINMUX_GPIO28__FUNC_SPI1_A_CLK>;
             slew-rate = <1>;
             output-high;
         };
     };
     fpsensor_finger_rst_mode_en0: fpsensor_finger_rst_low {
         pins_cmd_dat {
             pinmux = <PINMUX_GPIO22__FUNC_GPIO22>;
             slew-rate = <1>;
             output-low;
         };
     };
     fpsensor_finger_rst_mode_en1: fpsensor_finger_rst_high {
         pins_cmd_dat {
             pinmux = <PINMUX_GPIO22__FUNC_GPIO22>;
             slew-rate = <1>;
             output-high;
         };
     };
     fpsensor_finger_power_en0: fpsensor_finger_power_low {
     };

     fpsensor_finger_power_en1: fpsensor_finger_power_high {
     };

     fpsensor_fp_eint_as_int: fpsensor_eint_as_int {
         pins_cmd_dat {
             pinmux = <PINMUX_GPIO5__FUNC_GPIO5>;
             slew-rate = <0>;
             //bias-disable;
             bias-pull-down = <00>;
         };
     };
     fpsensor_fp_eint_in_low: fpsensor_eint_in_low {
         pins_cmd_dat {
             pinmux = <PINMUX_GPIO5__FUNC_GPIO5>;
             slew-rate = <0>;
             bias-pull-down = <00>;
         };
     };
     fpsensor_fp_eint_in_float: fpsensor_eint_in_float {
         pins_cmd_dat {
             pinmux = <PINMUX_GPIO5__FUNC_GPIO5>;
             slew-rate = <0>;
             bias-disable;
         };
     };
     fpsensor_finger_cs_mode_en0: fpsensor_finger_cs_low {
         pins_cmd_dat {
             pinmux = <PINMUX_GPIO26__FUNC_SPI1_A_CSB>;
             slew-rate = <1>;
             output-low;
             input-schmitt-enable = <0>;
         };
     };
     fpsensor_finger_cs_mode_en1: fpsensor_finger_cs_high {
         pins_cmd_dat {
             pinmux = <PINMUX_GPIO26__FUNC_SPI1_A_CSB>;
             slew-rate = <1>;
             output-high;
             input-schmitt-enable = <0>;
          };
     };
 };

&fingerprint_fpsensor{
     pinctrl-names = "fpsensor_spi_default", "fpsensor_spi_cs_low", "fpsensor_spi_cs_high", "fpsensor_spi_mi_low", "fpsensor_spi_mi_high", "fpsensor_spi_mo_low", "fpsensor_spi_mo_high", "fpsensor_spi_mclk_low", "fpsensor_spi_mclk_high", "fpsensor_finger_rst_low", "fpsensor_finger_rst_high", "fpsensor_finger_power_low", "fpsensor_finger_power_high", "fpsensor_eint_as_int", "fpsensor_eint_in_low", "fpsensor_eint_in_float", "fpsensor_finger_cs_low", "fpsensor_finger_cs_high";

     pinctrl-0 = <&fpsensor_spi_default>;
     pinctrl-1 = <&fpsensor_spi_cs_en0>;
     pinctrl-2 = <&fpsensor_spi_cs_en1>;
     pinctrl-3 = <&fpsensor_spi_mi_mode_en0>;
     pinctrl-4 = <&fpsensor_spi_mi_mode_en1>;
     pinctrl-5 = <&fpsensor_spi_mo_mode_en0>;
     pinctrl-6 = <&fpsensor_spi_mo_mode_en1>;
     pinctrl-7 = <&fpsensor_spi_mclk_mode_en0>;
     pinctrl-8 = <&fpsensor_spi_mclk_mode_en1>;

     pinctrl-9 = <&fpsensor_finger_rst_mode_en0>;
     pinctrl-10 = <&fpsensor_finger_rst_mode_en1>;
     pinctrl-11 = <&fpsensor_finger_power_en0>;
     pinctrl-12 = <&fpsensor_finger_power_en1>;
     pinctrl-13 = <&fpsensor_fp_eint_as_int>;
     pinctrl-14 = <&fpsensor_fp_eint_in_low>;
     pinctrl-15 = <&fpsensor_fp_eint_in_float>;
     pinctrl-16 = <&fpsensor_finger_cs_mode_en0>;
     pinctrl-17 = <&fpsensor_finger_cs_mode_en1>;

	     status = "okay";
 };

/* FINGERPRINT end */

/* IRTX GPIO end */
&irtx_pwm {
	pinctrl-names = "irtx_gpio_led_default", "irtx_gpio_led_set";
	pinctrl-0 = <&irtx_gpio_led_default>;
	pinctrl-1 = <&irtx_gpio_led_set>;
	status = "okay";
};
&pio {
	irtx_gpio_led_default:irtx_gpio_led_def@gpio90 {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO90__FUNC_GPIO90>;
			slew-rate = <1>;
			bias-disable;
			output-low;
			input-schmitt-enable = <0>;
		};
	};

	irtx_gpio_led_set:irtx_gpio_led_set@gpio90 {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO90__FUNC_PWM0>;
			slew-rate = <1>;
			output-high;
		};
	};
};
/* IRTX GPIO Settings -End */

/* AUDIO GPIO standardization */
&audgpio {
                pinctrl-names = "extamp-pulllow",
                                "extamp-pullhigh";
                pinctrl-0 = <&aud_extamp_gpio_low>;
                pinctrl-1 = <&aud_extamp_gpio_high>;
                status = "okay";
        };
&i2c5 {
	#address-cells = <1>;
	#size-cells = <0>;
	clock-frequency = <400000>;

	externel-charger@6c{
		compatible = "halo,hl7007";
		reg = <0x6c>;
		status = "okay";
	};
       externel-eta-charger@6e{
               compatible = "ontim,eta6937";
               reg = <0x6e>;/*dumy addr,in fact ,the addr is 0x6b-1*/
               status = "okay";
       };
	externel-charger@6a{
		compatible = "halo,hl7005";
		reg = <0x6a>;
		status = "okay";
		ichg = <1050000>; /* uA */
	};
	externel-charger@6d{
		compatible = "halo,sy6923";
		reg = <0x6d>;
		status = "okay";
		ichg = <1050000>; /* uA */
	};
	externel-charger@6b{
		compatible = "ti,bq25601";
		reg = <0x6b>;
		status = "okay";
	};
	externel-charger@53{
		compatible = "richtek,rt9471";
		reg = <0x53>;
		status = "okay";
		ichg = <2000000>; /* uA */
	};
};

        &pio {

                aud_extamp_gpio_low: aud_extamp_gpio_low {
                        pins_gpio_low {
                                pinmux = <PINMUX_GPIO153__FUNC_GPIO153>;
                                out-enable;
                                slew-rate = <2>;
                                bias-disable;
                                output-low;
                        };
                };

                aud_extamp_gpio_high: aud_extamp_gpio_high {
                        pins_gpio_high {
                                pinmux = <PINMUX_GPIO153__FUNC_GPIO153>;
                                out-enable;
                                slew-rate = <2>;
                                bias-disable;
                                output-high;
                        };
                };
};
/* AUDIO end */

&mt6370_pmu {
	mt6370,intr_gpio_num = <11>; /* direct defined GPIO num */
	mt6370,intr_gpio = <&pio 11 0x0>;
};

&mt6370_typec {
	mt6370pd,intr_gpio_num = <41>; /* direct defined GPIO num */
	mt6370pd,intr_gpio = <&pio 41 0x0>;
};

&usb_phy_tuning{
	u2_vrt_ref = <7>;
	u2_term_ref = <6>;
	u2_host_vrt_ref = <4>;
	u2_host_term_ref = <4>;
	status = "okay";
};

#include "bat_setting/mt6765_battery_table_blackjack.dtsi"
#include "bat_setting/mt6765_battery_table_blackjack_2.dtsi"

#include <blackjack_64/cust.dtsi>
#include "cust_mt6765_camera.dtsi"
/*End of this file, DO NOT ADD ANYTHING HERE*/
